# version: '3'
## version: '3.3'

volumes:
   prometheus_data: {}


networks:
   loki: { }
services:
   prometheus:
      ## image: prom/prometheus:v2.31.0
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_PROMETHEUS_REPO}:${IMAGE_PROMETHEUS_VERSION}
      ports:
         - 9090:9090
#      links:
#         - alertmanager:alertmanager
      #         - cadvisor:cadvisor
      depends_on:
         - alertmanager
      networks:
         loki: null
      command:
         - '--config.file=/etc/prometheus/prometheus.yml'
         - '--storage.tsdb.path=/prometheus'
         - '--web.console.libraries=/usr/share/prometheus/console_libraries'
         - '--web.console.templates=/usr/share/prometheus/consoles'
      volumes:
         - ./prometheus/:/etc/prometheus/
         - prometheus_data:/prometheus
      restart: always
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   alertmanager:
      ## image: prom/alertmanager
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_ALERTMANAGER_REPO}:${IMAGE_ALERTMANAGER_VERSION}
      ports:
         - 9093:9093
      volumes:
         - "./alertmanager/:/etc/alertmanager/"
      networks:
         loki: null
      command:
         - '--config.file=/etc/alertmanager/config.yml'
         - '--storage.path=/alertmanager'
      deploy:
         placement:
            constraints:
               ## - node.role==manager
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   blackbox_exporter:
      ## image: prom/blackbox-exporter:v0.18.0
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_BLACKBOX_EXPORTER_REPO}:${IMAGE_BLACKBOX_EXPORTER_VERSION}
      container_name: blackbox_exporter
      depends_on:
         - prometheus
      networks:
         loki: null
      ports:
         -  protocol: tcp
            published: 9115
            target: 9115
      restart: always
      volumes:
         - ./config/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   grafana:
      ## image: grafana/grafana:8.1.2
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_GRAFANA_REPO}:${IMAGE_GRAFANA_VERSION}
      container_name: grafana
      depends_on:
         - prometheus
         - loki
         - tempo
      environment:
         GF_AUTH_ANONYMOUS_ENABLED: "true"
         GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
         GF_AUTH_BASIC_ENABLED: "false"
         GF_AUTH_DISABLE_LOGIN_FORM: "true"
         GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /var/lib/grafana/dashboards/no_folder/loki_syslog_aio_overview.json
      networks:
         loki: null
      ports:
         -  protocol: tcp
            published: 3000
            target: 3000
      restart: always
      volumes:
         - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
         - ./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
         - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   loki:
      ## image: grafana/loki:2.3.0
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_LOKI_REPO}:${IMAGE_LOKI_VERSION}
      container_name: loki
      depends_on:
         - tempo
         - alloy
      networks:
         loki: null
      ports:
         -  protocol: tcp
            published: 3100
            target: 3100
      restart: always
      command: -config.file=/etc/loki/loki-config.yml
      volumes:
         - ./config/loki-config-ram.yml:/etc/loki/loki-config.yml:ro
         ## - ./config/loki-config-filesystem.yml:/etc/loki/loki-config.yml:ro
         ## - ./config/loki-config-s3.yml:/etc/loki/loki-config.yml:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   alloy:
      ## image: grafana/alloy:2.3.0
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_ALLOY_REPO}:${IMAGE_ALLOY_VERSION}
      ## command: -config.file=/etc/alloy/config.alloy
      container_name: alloy
      networks:
         loki: null
      ports:
         -  protocol: udp
            published: 1514
            target: 1514
         -  protocol: tcp
            published: 1601
            target: 1601
         -  protocol: tcp
            published: 12345
            target: 12345
      restart: always
      volumes:
         - ./config/alloy-config.yml:/etc/alloy/config.alloy:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   tempo:
      ## image: grafana/tempo:0.8.0
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_TEMPO_REPO}:${IMAGE_TEMPO_VERSION}
      command: -config.file=/etc/tempo/tempo-config.yml
      container_name: tempo
      networks:
         loki: null
      ports:
         -  protocol: tcp
            published: 3200
            target: 3200
      restart: always
      volumes:
         - ./config/tempo-config.yml:/etc/tempo/tempo-config.yml:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   pyroscope:
      ## image: pyroscope/pyroscope:0.9.0
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_PYROSCOPE_REPO}:${IMAGE_PYROSCOPE_VERSION}
      ## command: -config.file=/etc/pyroscope/pyroscope-config.yml
      container_name: pyroscope
      networks:
         loki: null
      ports:
         -  protocol: tcp
            published: 4040
            target: 4040
      restart: always
      volumes:
         - ./config/pyroscope-config.yml:/etc/pyroscope/config.yaml:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

   syslog-ng:
      ## image: balabit/syslog-ng:latest
      image: ${IMAGE_ARTIFACTORY_PREFIX}${IMAGE_SYSLOG_NG_REPO}:${IMAGE_SYSLOG_NG_VERSION}
      command: -edv
      container_name: syslog-ng
#      depends_on:
#         - promtail
      networks:
         loki: null
      ports:
         -  protocol: udp
            published: 2514
            target: 514
         -  protocol: tcp
            published: 2601
            target: 601
      restart: always
      volumes:
         - ./config/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro
      deploy:
         placement:
            constraints:
               - node.hostname == ${HOSTNAME}
         restart_policy:
            condition: on-failure

